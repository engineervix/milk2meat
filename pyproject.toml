[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["Victor Miti <hello@victor.co.zm>"]
description = "A tool to help one get into The Word of God"
name = "milk2meat"
packages = [{ include = "milk2meat" }]
readme = "README.md"
version = "2.1.0"

[tool.poetry.dependencies]
# Core
python = "~=3.13"
django = { version = ">=5.2,<5.3", extras = ["argon2", "bcrypt"] }
psycopg2 = "^2.9.9"

# Django Extensions
django-environ = "0.12.0"
django-extensions = "3.2.3"
django-ninja = "^1.3.0"
django-redis = "5.4.0"
django-taggit = "^6.1.0"
django-upload-validator = "^1.1.6"
django-watson = "^1.6.3"
django-widget-tweaks = "^1.5.0"

# Other third-party libraries
bpython = "^0.24"
hiredis = "^2.3.2"
markdown = "^3.7"
nh3 = "^0.3.0"
pillow = "^11.1.0"
pydantic = "^2.5.3"
pymdown-extensions = "^10.14.3"
python-magic = "^0.4.27"
requests = "^2.32.3"
whitenoise = "^6.9.0"

# Production
boto3 = "^1.34.7"
# remove the extras you don't need
django-anymail = {extras = ["mailjet", "sendinblue"], version = "^11.0.1"}
django-storages = "^1.14.2"
gunicorn = "^23.0.0"
sentry-sdk = {extras = ["django"], version = "^2.10.0"}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
commitizen = "^3.14.1"
django-debug-toolbar = "^5.0.1"
django-upgrade = "^1.23.1"
djlint = "^1.34.1"
dslr = "^0.6.0"
honcho = "^2.0.0"
invoke = "^2.2.0"
pre-commit = "~4.2.0"
ruff = "^0.12.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-cov = "^6.0.0"
pytest-django = "^4.10.0"
pytest-dotenv = "^0.5.2"
pytest-factoryboy = "^2.7.0"
pytest-logger = "^1.1.1"
pytest-mock = "^3.14.0"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.6.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-git-revision-date-localized-plugin = "^1.2.1"
mkdocs-glightbox = "^0.4.0"
mkdocs-material = "^9.5.2"

[tool.black]
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | (.*)/migrations
    | node_modules
    | dist
  )/
)
'''
include = '\.pyi?$'
line-length = 120
target-version = ["py310", "py311", "py312", "py313"]

[tool.ruff]
exclude = [".git", "__pycache__", "node_modules", "public", "venv", ".venv"]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = ["E203", "E266", "E501"]
select = ["B", "C", "E", "F", "W", "B9"]

[tool.ruff.lint.isort]
known-first-party = ["milk2meat"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.coverage.run]
branch = true # Measure branch coverage
omit = [
  "**/migrations/*",
  "**/tests/*",
  "**/settings/*",
  "*urls.py",
  "*sgi.py",
]
source = ["milk2meat"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "milk2meat.settings.test"
addopts = "--ds=milk2meat.settings.test -s -vv --cov-config=pyproject.toml --cov --cov-report json --cov-report term-missing:skip-covered"
env_override_existing_values = 1
log_cli = 1
python_files = ["test_*.py", "*_tests.py"]

[tool.commitizen]
annotated_tag = true
tag_format = "v$major.$minor.$patch"
update_changelog_on_bump = false
version_files = [
    "milk2meat/__init__.py",
]
version_provider = "poetry"

[tool.djlint]
custom_html = "mjml,mj-\\w+"
profile = "django"
